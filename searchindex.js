Search.setIndex({"docnames": ["data_snack", "data_snack.connections", "data_snack.entities", "data_snack.serializers", "data_snack.wrap", "examples", "index", "modules"], "filenames": ["data_snack.rst", "data_snack.connections.rst", "data_snack.entities.rst", "data_snack.serializers.rst", "data_snack.wrap.rst", "examples.rst", "index.rst", "modules.rst"], "titles": ["data_snack package", "data_snack.connections package", "data_snack.entities package", "data_snack.serializers package", "data_snack.wrap package", "Examples", "Welcome to Data Snack\u2019s documentation!", "data_snack"], "terms": {"connect": [0, 7], "base": [0, 2, 7], "delet": [0, 1, 4, 7], "delete_mani": [0, 1, 4, 7], "get": [0, 1, 2, 4, 5, 7], "get_mani": [0, 1, 4, 5, 7], "kei": [0, 1, 2, 4, 5, 7], "set": [0, 1, 4, 5, 7], "set_mani": [0, 1, 4, 5, 7], "memcach": [0, 7], "memcachedconnect": [0, 1], "redi": [0, 7], "redisconnect": [0, 1], "entiti": [0, 3, 6, 7], "meta": [0, 2], "get_all_field": [0, 2], "get_excluded_field": [0, 2], "get_field": [0, 2], "get_kei": [0, 2], "registri": [0, 7], "entityregistri": [0, 2], "entity_typ": [0, 2, 3, 4], "serial": [0, 2, 7], "deseri": [0, 3], "dataclass": [0, 5, 7], "dataclassseri": [0, 3], "wrap": [0, 7], "data_fram": [0, 7], "dataframewrap": [0, 4, 5], "get_datafram": [0, 4, 5], "set_datafram": [0, 4, 5], "entitywrap": [0, 4, 6], "entity_type_nam": [0, 4], "dataframemissingkeycolumn": [0, 4], "entityalreadyregist": [0, 7], "wrongkeyvalu": [0, 7], "class": [0, 1, 2, 3, 4, 5], "keyfactori": [0, 7], "arg": [0, 1, 2, 4], "kwarg": [0, 1, 2, 4], "protocol": [0, 1], "type_nam": 0, "str": [0, 1, 2, 4], "key_valu": [0, 4], "ani": [0, 1, 2, 4], "key_factory_clust": [0, 7], "type": [0, 2, 3, 4, 5], "dict": [0, 1], "factori": 0, "function": [0, 6], "object": [0, 2, 4, 5], "A": 0, "core": 0, "interfac": [0, 1, 4, 5], "handl": [0, 5], "save": [0, 1, 4, 6], "read": [0, 1, 4], "from": [0, 1, 4, 5], "db": [0, 1, 4], "create_wrap": [0, 5, 7], "wrap_typ": 0, "creat": [0, 1, 4, 6], "select": [0, 1, 4, 5], "paramet": [0, 1, 4], "default": 0, "us": [0, 1, 4, 6], "other": 0, "can": [0, 5], "return": [0, 1, 4, 5], "cl": 0, "list": [0, 1, 2, 3, 4, 5], "bool": [0, 1, 3, 4], "one": [0, 4, 5], "provid": [0, 1, 4, 5], "valu": [0, 1, 4], "notic": [0, 5], "i": [0, 1, 4, 5], "repres": 0, "string": 0, "sinc": [0, 5], "have": 0, "multipl": [0, 1, 4], "field": [0, 2, 4, 5], "true": [0, 1, 4], "data": [0, 1, 3, 4], "were": [0, 1, 4], "keys_valu": [0, 4], "each": [0, 1, 4, 5], "defin": [0, 4], "an": [0, 1, 4, 6], "retriev": [0, 1, 4, 5], "given": [0, 1, 4, 5], "register_ent": [0, 5, 7], "none": [0, 4], "regist": [0, 5], "new": [0, 1, 6], "compress": 0, "decompress": 0, "befor": 0, "expir": [0, 1, 4], "int": [0, 1, 4, 5], "0": [0, 1, 4, 5], "store": [0, 5], "overwritten": 0, "so": [0, 5], "make": [0, 5], "sure": 0, "all": [0, 2, 4, 5], "combin": 0, "ar": [0, 4, 5], "uniqu": [0, 1], "number": [0, 1, 4], "second": [0, 1, 4], "until": [0, 1, 4], "item": [0, 1, 4], "zero": [0, 1, 4], "expiri": [0, 1, 4], "success": 0, "fail": 0, "gener": [0, 4], "snack": [1, 4, 7], "access": [1, 4, 5], "If": 1, "you": 1, "want": 1, "custom": 1, "your": 1, "choos": 1, "follow": [1, 4, 5], "thi": [1, 5], "identifi": 1, "byte": [1, 3, 4], "dictionari": 1, "assign": 1, "pattern": 1, "onli": [1, 2, 5], "subset": 1, "wa": [1, 5], "contain": [1, 4], "correspond": [1, 4], "successfulli": 1, "client": [1, 5], "abc": [2, 3, 4], "excluded_field": 2, "classmethod": 2, "exclud": 2, "abstract": 3, "mani": 3, "fals": 3, "simplifi": 4, "avail": 4, "df": [4, 5], "datafram": [4, 5], "frame": [4, 6], "input": [4, 5], "should": 4, "column": [4, 5], "full": 4, "sourc": 4, "need": [4, 5], "schema": [4, 5], "row": 4, "singl": 4, "tabular": 4, "form": 4, "properti": 4, "name": 4, "In": 5, "section": 5, "we": 5, "go": 5, "through": 5, "few": 5, "how": 5, "databas": 5, "basic": 5, "explain": 5, "The": 5, "first": 5, "thing": 5, "do": 5, "common": 5, "structur": 5, "thei": 5, "valid": 5, "whenev": 5, "try": 5, "recommend": 5, "ad": 5, "addit": 5, "layer": 5, "For": 5, "pydant": 5, "decor": 5, "import": 5, "text": 5, "data_snack": [5, 6], "car": 5, "index": [5, 6], "price": 5, "brand": 5, "backend": 5, "our": 5, "But": 5, "could": 5, "easili": 5, "adjust": 5, "long": 5, "redis_connect": 5, "host": 5, "127": 5, "port": 5, "6379": 5, "password": 5, "To": 5, "start": 5, "previou": 5, "step": 5, "Then": 5, "while": 5, "also": 5, "which": 5, "now": 5, "when": 5, "audi": 5, "17000": 5, "mset": 5, "mget": 5, "optim": 5, "wai": 5, "alwai": 5, "faster": 5, "than": 5, "manual": 5, "standard": 5, "opel": 5, "4000": 5, "7000": 5, "toyota": 5, "14000": 5, "easier": 5, "work": 5, "without": 5, "specifi": 5, "entitytyp": 5, "command": 5, "car_wrap": 5, "panda": 5, "pd": 5, "map": 5, "python": 5, "v": 5, "to_dict": 5, "orient": 5, "record": 5, "Or": 5, "predefin": 5, "helper": 5, "allow": 5, "df_wrap": 5, "db_wrap": 5, "requir": 5, "As": 5, "result": 5, "It": 5, "extend": 5, "instead": 5, "exampl": 6, "1": 6, "2": 6, "3": 6, "util": 6, "packag": [6, 7], "modul": [6, 7], "search": 6, "page": 6, "subpackag": 7, "submodul": 7, "content": 7, "except": 7, "key_factori": 7}, "objects": {"": [[0, 0, 0, "-", "data_snack"]], "data_snack": [[1, 0, 0, "-", "connections"], [2, 0, 0, "-", "entities"], [0, 0, 0, "-", "exceptions"], [0, 0, 0, "-", "key_factory"], [3, 0, 0, "-", "serializers"], [0, 0, 0, "-", "snack"], [4, 0, 0, "-", "wrap"]], "data_snack.connections": [[1, 0, 0, "-", "base"], [1, 0, 0, "-", "memcached"], [1, 0, 0, "-", "redis"]], "data_snack.connections.base": [[1, 1, 1, "", "Connection"]], "data_snack.connections.base.Connection": [[1, 2, 1, "", "connection"], [1, 3, 1, "", "delete"], [1, 3, 1, "", "delete_many"], [1, 3, 1, "", "get"], [1, 3, 1, "", "get_many"], [1, 3, 1, "", "keys"], [1, 3, 1, "", "set"], [1, 3, 1, "", "set_many"]], "data_snack.connections.memcached": [[1, 1, 1, "", "MemcachedConnection"]], "data_snack.connections.memcached.MemcachedConnection": [[1, 2, 1, "", "connection"], [1, 3, 1, "", "delete"], [1, 3, 1, "", "delete_many"], [1, 3, 1, "", "get"], [1, 3, 1, "", "get_many"], [1, 3, 1, "", "keys"], [1, 3, 1, "", "set"], [1, 3, 1, "", "set_many"]], "data_snack.connections.redis": [[1, 1, 1, "", "RedisConnection"]], "data_snack.connections.redis.RedisConnection": [[1, 2, 1, "", "connection"], [1, 3, 1, "", "delete"], [1, 3, 1, "", "delete_many"], [1, 3, 1, "", "get"], [1, 3, 1, "", "get_many"], [1, 3, 1, "", "keys"], [1, 3, 1, "", "set"], [1, 3, 1, "", "set_many"]], "data_snack.entities": [[2, 0, 0, "-", "entity"], [2, 0, 0, "-", "registry"]], "data_snack.entities.entity": [[2, 1, 1, "", "Entity"]], "data_snack.entities.entity.Entity": [[2, 1, 1, "", "Meta"], [2, 3, 1, "", "get_all_fields"], [2, 3, 1, "", "get_excluded_fields"], [2, 3, 1, "", "get_fields"], [2, 3, 1, "", "get_keys"]], "data_snack.entities.entity.Entity.Meta": [[2, 2, 1, "", "excluded_fields"], [2, 2, 1, "", "keys"]], "data_snack.entities.registry": [[2, 1, 1, "", "EntityRegistry"]], "data_snack.entities.registry.EntityRegistry": [[2, 2, 1, "", "entity_type"], [2, 2, 1, "", "serializer"]], "data_snack.exceptions": [[0, 4, 1, "", "EntityAlreadyRegistered"], [0, 4, 1, "", "WrongKeyValue"]], "data_snack.key_factory": [[0, 1, 1, "", "KeyFactory"], [0, 5, 1, "", "key_factory"], [0, 5, 1, "", "key_factory_cluster"]], "data_snack.serializers": [[3, 0, 0, "-", "base"], [3, 0, 0, "-", "dataclass"]], "data_snack.serializers.base": [[3, 1, 1, "", "Serializer"]], "data_snack.serializers.base.Serializer": [[3, 3, 1, "", "deserialize"], [3, 2, 1, "", "entity_type"], [3, 3, 1, "", "serialize"]], "data_snack.serializers.dataclass": [[3, 1, 1, "", "DataclassSerializer"]], "data_snack.serializers.dataclass.DataclassSerializer": [[3, 3, 1, "", "deserialize"], [3, 3, 1, "", "serialize"]], "data_snack.snack": [[0, 1, 1, "", "Snack"]], "data_snack.snack.Snack": [[0, 2, 1, "", "connection"], [0, 3, 1, "", "create_wrap"], [0, 3, 1, "", "delete"], [0, 3, 1, "", "delete_many"], [0, 3, 1, "", "get"], [0, 3, 1, "", "get_many"], [0, 3, 1, "", "key_factory"], [0, 3, 1, "", "keys"], [0, 3, 1, "", "register_entity"], [0, 2, 1, "", "registry"], [0, 3, 1, "", "set"], [0, 3, 1, "", "set_many"]], "data_snack.wrap": [[4, 0, 0, "-", "base"], [4, 0, 0, "-", "data_frame"], [4, 0, 0, "-", "entity"], [4, 0, 0, "-", "exceptions"]], "data_snack.wrap.base": [[4, 1, 1, "", "Wrap"]], "data_snack.wrap.base.Wrap": [[4, 3, 1, "", "delete"], [4, 3, 1, "", "delete_many"], [4, 3, 1, "", "get"], [4, 3, 1, "", "get_many"], [4, 3, 1, "", "keys"], [4, 3, 1, "", "set"], [4, 3, 1, "", "set_many"]], "data_snack.wrap.data_frame": [[4, 1, 1, "", "DataFrameWrap"]], "data_snack.wrap.data_frame.DataFrameWrap": [[4, 3, 1, "", "get_dataframe"], [4, 3, 1, "", "set_dataframe"]], "data_snack.wrap.entity": [[4, 1, 1, "", "EntityWrap"]], "data_snack.wrap.entity.EntityWrap": [[4, 3, 1, "", "delete"], [4, 3, 1, "", "delete_many"], [4, 2, 1, "", "entity_type"], [4, 6, 1, "", "entity_type_name"], [4, 3, 1, "", "get"], [4, 3, 1, "", "get_many"], [4, 3, 1, "", "keys"], [4, 3, 1, "", "set"], [4, 3, 1, "", "set_many"], [4, 2, 1, "", "snack"]], "data_snack.wrap.exceptions": [[4, 4, 1, "", "DataFrameMissingKeyColumn"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"data_snack": [0, 1, 2, 3, 4, 7], "packag": [0, 1, 2, 3, 4], "subpackag": 0, "submodul": [0, 1, 2, 3, 4], "except": [0, 4], "modul": [0, 1, 2, 3, 4], "key_factori": 0, "snack": [0, 5, 6], "content": [0, 1, 2, 3, 4, 6], "connect": [1, 5], "base": [1, 3, 4], "memcach": 1, "redi": [1, 5], "entiti": [2, 4, 5], "registri": 2, "serial": 3, "dataclass": 3, "wrap": 4, "data_fram": 4, "exampl": 5, "1": 5, "creat": 5, "new": 5, "save": 5, "defin": 5, "2": 5, "3": 5, "instanc": 5, "4": 5, "load": 5, "singl": 5, "5": 5, "multipl": 5, "us": 5, "an": 5, "entitywrap": 5, "data": [5, 6], "frame": 5, "util": 5, "function": 5, "your": 5, "dataset": 5, "you": 5, "welcom": 6, "": 6, "document": 6, "indic": 6, "tabl": 6}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"data_snack package": [[0, "data-snack-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"]], "data_snack.exceptions module": [[0, "module-data_snack.exceptions"]], "data_snack.key_factory module": [[0, "module-data_snack.key_factory"]], "data_snack.snack module": [[0, "module-data_snack.snack"]], "Module contents": [[0, "module-data_snack"], [1, "module-data_snack.connections"], [2, "module-data_snack.entities"], [3, "module-data_snack.serializers"], [4, "module-data_snack.wrap"]], "data_snack.connections package": [[1, "data-snack-connections-package"]], "data_snack.connections.base module": [[1, "module-data_snack.connections.base"]], "data_snack.connections.memcached module": [[1, "module-data_snack.connections.memcached"]], "data_snack.connections.redis module": [[1, "module-data_snack.connections.redis"]], "data_snack.entities package": [[2, "data-snack-entities-package"]], "data_snack.entities.entity module": [[2, "module-data_snack.entities.entity"]], "data_snack.entities.registry module": [[2, "module-data_snack.entities.registry"]], "data_snack.serializers package": [[3, "data-snack-serializers-package"]], "data_snack.serializers.base module": [[3, "module-data_snack.serializers.base"]], "data_snack.serializers.dataclass module": [[3, "module-data_snack.serializers.dataclass"]], "data_snack.wrap package": [[4, "data-snack-wrap-package"]], "data_snack.wrap.base module": [[4, "module-data_snack.wrap.base"]], "data_snack.wrap.data_frame module": [[4, "module-data_snack.wrap.data_frame"]], "data_snack.wrap.entity module": [[4, "module-data_snack.wrap.entity"]], "data_snack.wrap.exceptions module": [[4, "module-data_snack.wrap.exceptions"]], "Examples": [[5, "examples"]], "Example 1 - Creating new entities and saving": [[5, "example-1-creating-new-entities-and-saving"]], "1. Define entities": [[5, "define-entities"]], "2. Connect to redis": [[5, "connect-to-redis"]], "3. Create snack instance": [[5, "create-snack-instance"]], "4. Save and load single entity": [[5, "save-and-load-single-entity"]], "5. Save and load multiple entities": [[5, "save-and-load-multiple-entities"]], "Example 2 - Using an EntityWrap": [[5, "example-2-using-an-entitywrap"]], "Example 3 - Using data frame utils functions": [[5, "example-3-using-data-frame-utils-functions"]], "1. Define your dataset": [[5, "define-your-dataset"]], "2. Save and load you data frame": [[5, "save-and-load-you-data-frame"]], "Welcome to Data Snack\u2019s documentation!": [[6, "welcome-to-data-snack-s-documentation"]], "Contents:": [[6, null]], "Indices and tables": [[6, "indices-and-tables"]], "data_snack": [[7, "data-snack"]]}, "indexentries": {"entityalreadyregistered": [[0, "data_snack.exceptions.EntityAlreadyRegistered"]], "keyfactory (class in data_snack.key_factory)": [[0, "data_snack.key_factory.KeyFactory"]], "snack (class in data_snack.snack)": [[0, "data_snack.snack.Snack"]], "wrongkeyvalue": [[0, "data_snack.exceptions.WrongKeyValue"]], "connection (data_snack.snack.snack attribute)": [[0, "data_snack.snack.Snack.connection"]], "create_wrap() (data_snack.snack.snack method)": [[0, "data_snack.snack.Snack.create_wrap"]], "data_snack": [[0, "module-data_snack"]], "data_snack.exceptions": [[0, "module-data_snack.exceptions"]], "data_snack.key_factory": [[0, "module-data_snack.key_factory"]], "data_snack.snack": [[0, "module-data_snack.snack"]], "delete() (data_snack.snack.snack method)": [[0, "data_snack.snack.Snack.delete"]], "delete_many() (data_snack.snack.snack method)": [[0, "data_snack.snack.Snack.delete_many"]], "get() (data_snack.snack.snack method)": [[0, "data_snack.snack.Snack.get"]], "get_many() (data_snack.snack.snack method)": [[0, "data_snack.snack.Snack.get_many"]], "key_factory() (data_snack.snack.snack method)": [[0, "data_snack.snack.Snack.key_factory"]], "key_factory() (in module data_snack.key_factory)": [[0, "data_snack.key_factory.key_factory"]], "key_factory_cluster() (in module data_snack.key_factory)": [[0, "data_snack.key_factory.key_factory_cluster"]], "keys() (data_snack.snack.snack method)": [[0, "data_snack.snack.Snack.keys"]], "module": [[0, "module-data_snack"], [0, "module-data_snack.exceptions"], [0, "module-data_snack.key_factory"], [0, "module-data_snack.snack"], [1, "module-data_snack.connections"], [1, "module-data_snack.connections.base"], [1, "module-data_snack.connections.memcached"], [1, "module-data_snack.connections.redis"], [2, "module-data_snack.entities"], [2, "module-data_snack.entities.entity"], [2, "module-data_snack.entities.registry"], [3, "module-data_snack.serializers"], [3, "module-data_snack.serializers.base"], [3, "module-data_snack.serializers.dataclass"], [4, "module-data_snack.wrap"], [4, "module-data_snack.wrap.base"], [4, "module-data_snack.wrap.data_frame"], [4, "module-data_snack.wrap.entity"], [4, "module-data_snack.wrap.exceptions"]], "register_entity() (data_snack.snack.snack method)": [[0, "data_snack.snack.Snack.register_entity"]], "registry (data_snack.snack.snack attribute)": [[0, "data_snack.snack.Snack.registry"]], "set() (data_snack.snack.snack method)": [[0, "data_snack.snack.Snack.set"]], "set_many() (data_snack.snack.snack method)": [[0, "data_snack.snack.Snack.set_many"]], "connection (class in data_snack.connections.base)": [[1, "data_snack.connections.base.Connection"]], "memcachedconnection (class in data_snack.connections.memcached)": [[1, "data_snack.connections.memcached.MemcachedConnection"]], "redisconnection (class in data_snack.connections.redis)": [[1, "data_snack.connections.redis.RedisConnection"]], "connection (data_snack.connections.base.connection attribute)": [[1, "data_snack.connections.base.Connection.connection"]], "connection (data_snack.connections.memcached.memcachedconnection attribute)": [[1, "data_snack.connections.memcached.MemcachedConnection.connection"]], "connection (data_snack.connections.redis.redisconnection attribute)": [[1, "data_snack.connections.redis.RedisConnection.connection"]], "data_snack.connections": [[1, "module-data_snack.connections"]], "data_snack.connections.base": [[1, "module-data_snack.connections.base"]], "data_snack.connections.memcached": [[1, "module-data_snack.connections.memcached"]], "data_snack.connections.redis": [[1, "module-data_snack.connections.redis"]], "delete() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.delete"]], "delete() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.delete"]], "delete() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.delete"]], "delete_many() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.delete_many"]], "delete_many() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.delete_many"]], "delete_many() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.delete_many"]], "get() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.get"]], "get() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.get"]], "get() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.get"]], "get_many() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.get_many"]], "get_many() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.get_many"]], "get_many() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.get_many"]], "keys() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.keys"]], "keys() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.keys"]], "keys() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.keys"]], "set() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.set"]], "set() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.set"]], "set() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.set"]], "set_many() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.set_many"]], "set_many() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.set_many"]], "set_many() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.set_many"]], "entity (class in data_snack.entities.entity)": [[2, "data_snack.entities.entity.Entity"]], "entity.meta (class in data_snack.entities.entity)": [[2, "data_snack.entities.entity.Entity.Meta"]], "entityregistry (class in data_snack.entities.registry)": [[2, "data_snack.entities.registry.EntityRegistry"]], "data_snack.entities": [[2, "module-data_snack.entities"]], "data_snack.entities.entity": [[2, "module-data_snack.entities.entity"]], "data_snack.entities.registry": [[2, "module-data_snack.entities.registry"]], "entity_type (data_snack.entities.registry.entityregistry attribute)": [[2, "data_snack.entities.registry.EntityRegistry.entity_type"]], "excluded_fields (data_snack.entities.entity.entity.meta attribute)": [[2, "data_snack.entities.entity.Entity.Meta.excluded_fields"]], "get_all_fields() (data_snack.entities.entity.entity class method)": [[2, "data_snack.entities.entity.Entity.get_all_fields"]], "get_excluded_fields() (data_snack.entities.entity.entity class method)": [[2, "data_snack.entities.entity.Entity.get_excluded_fields"]], "get_fields() (data_snack.entities.entity.entity class method)": [[2, "data_snack.entities.entity.Entity.get_fields"]], "get_keys() (data_snack.entities.entity.entity class method)": [[2, "data_snack.entities.entity.Entity.get_keys"]], "keys (data_snack.entities.entity.entity.meta attribute)": [[2, "data_snack.entities.entity.Entity.Meta.keys"]], "serializer (data_snack.entities.registry.entityregistry attribute)": [[2, "data_snack.entities.registry.EntityRegistry.serializer"]], "dataclassserializer (class in data_snack.serializers.dataclass)": [[3, "data_snack.serializers.dataclass.DataclassSerializer"]], "serializer (class in data_snack.serializers.base)": [[3, "data_snack.serializers.base.Serializer"]], "data_snack.serializers": [[3, "module-data_snack.serializers"]], "data_snack.serializers.base": [[3, "module-data_snack.serializers.base"]], "data_snack.serializers.dataclass": [[3, "module-data_snack.serializers.dataclass"]], "deserialize() (data_snack.serializers.base.serializer method)": [[3, "data_snack.serializers.base.Serializer.deserialize"]], "deserialize() (data_snack.serializers.dataclass.dataclassserializer method)": [[3, "data_snack.serializers.dataclass.DataclassSerializer.deserialize"]], "entity_type (data_snack.serializers.base.serializer attribute)": [[3, "data_snack.serializers.base.Serializer.entity_type"]], "serialize() (data_snack.serializers.base.serializer method)": [[3, "data_snack.serializers.base.Serializer.serialize"]], "serialize() (data_snack.serializers.dataclass.dataclassserializer method)": [[3, "data_snack.serializers.dataclass.DataclassSerializer.serialize"]], "dataframemissingkeycolumn": [[4, "data_snack.wrap.exceptions.DataFrameMissingKeyColumn"]], "dataframewrap (class in data_snack.wrap.data_frame)": [[4, "data_snack.wrap.data_frame.DataFrameWrap"]], "entitywrap (class in data_snack.wrap.entity)": [[4, "data_snack.wrap.entity.EntityWrap"]], "wrap (class in data_snack.wrap.base)": [[4, "data_snack.wrap.base.Wrap"]], "data_snack.wrap": [[4, "module-data_snack.wrap"]], "data_snack.wrap.base": [[4, "module-data_snack.wrap.base"]], "data_snack.wrap.data_frame": [[4, "module-data_snack.wrap.data_frame"]], "data_snack.wrap.entity": [[4, "module-data_snack.wrap.entity"]], "data_snack.wrap.exceptions": [[4, "module-data_snack.wrap.exceptions"]], "delete() (data_snack.wrap.base.wrap method)": [[4, "data_snack.wrap.base.Wrap.delete"]], "delete() (data_snack.wrap.entity.entitywrap method)": [[4, "data_snack.wrap.entity.EntityWrap.delete"]], "delete_many() (data_snack.wrap.base.wrap method)": [[4, "data_snack.wrap.base.Wrap.delete_many"]], "delete_many() (data_snack.wrap.entity.entitywrap method)": [[4, "data_snack.wrap.entity.EntityWrap.delete_many"]], "entity_type (data_snack.wrap.entity.entitywrap attribute)": [[4, "data_snack.wrap.entity.EntityWrap.entity_type"]], "entity_type_name (data_snack.wrap.entity.entitywrap property)": [[4, "data_snack.wrap.entity.EntityWrap.entity_type_name"]], "get() (data_snack.wrap.base.wrap method)": [[4, "data_snack.wrap.base.Wrap.get"]], "get() (data_snack.wrap.entity.entitywrap method)": [[4, "data_snack.wrap.entity.EntityWrap.get"]], "get_dataframe() (data_snack.wrap.data_frame.dataframewrap method)": [[4, "data_snack.wrap.data_frame.DataFrameWrap.get_dataframe"]], "get_many() (data_snack.wrap.base.wrap method)": [[4, "data_snack.wrap.base.Wrap.get_many"]], "get_many() (data_snack.wrap.entity.entitywrap method)": [[4, "data_snack.wrap.entity.EntityWrap.get_many"]], "keys() (data_snack.wrap.base.wrap method)": [[4, "data_snack.wrap.base.Wrap.keys"]], "keys() (data_snack.wrap.entity.entitywrap method)": [[4, "data_snack.wrap.entity.EntityWrap.keys"]], "set() (data_snack.wrap.base.wrap method)": [[4, "data_snack.wrap.base.Wrap.set"]], "set() (data_snack.wrap.entity.entitywrap method)": [[4, "data_snack.wrap.entity.EntityWrap.set"]], "set_dataframe() (data_snack.wrap.data_frame.dataframewrap method)": [[4, "data_snack.wrap.data_frame.DataFrameWrap.set_dataframe"]], "set_many() (data_snack.wrap.base.wrap method)": [[4, "data_snack.wrap.base.Wrap.set_many"]], "set_many() (data_snack.wrap.entity.entitywrap method)": [[4, "data_snack.wrap.entity.EntityWrap.set_many"]], "snack (data_snack.wrap.entity.entitywrap attribute)": [[4, "data_snack.wrap.entity.EntityWrap.snack"]]}})