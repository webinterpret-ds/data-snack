Search.setIndex({"docnames": ["data_snack", "data_snack.connections", "data_snack.entities", "data_snack.key_factories", "data_snack.serializers", "data_snack.wrap", "examples", "index", "modules"], "filenames": ["data_snack.rst", "data_snack.connections.rst", "data_snack.entities.rst", "data_snack.key_factories.rst", "data_snack.serializers.rst", "data_snack.wrap.rst", "examples.rst", "index.rst", "modules.rst"], "titles": ["data_snack package", "data_snack.connections package", "data_snack.entities package", "data_snack.key_factories package", "data_snack.serializers package", "data_snack.wrap package", "Examples", "Welcome to Data Snack\u2019s documentation!", "data_snack"], "terms": {"connect": [0, 8], "base": [0, 2, 8], "delet": [0, 1, 5], "delete_mani": [0, 1, 5], "get": [0, 1, 2, 3, 5, 6], "get_mani": [0, 1, 5, 6], "kei": [0, 1, 2, 3, 5, 6], "set": [0, 1, 5, 6], "set_mani": [0, 1, 5, 6], "memcach": [0, 8], "memcachedconnect": [0, 1], "redi": [0, 8], "redisconnect": [0, 1], "entiti": [0, 4, 7, 8], "meta": [0, 2], "get_all_field": [0, 2], "get_excluded_field": [0, 2], "get_field": [0, 2], "get_kei": [0, 2, 3], "entity_meta": [0, 8], "entitymetaclass": [0, 2], "meta_field": [0, 2], "metaemptykeysexcept": [0, 2], "metafieldsexcept": [0, 2], "nonexistingmetaerror": [0, 2], "registri": [0, 8], "entityregistri": [0, 2], "entity_typ": [0, 2, 4, 5], "serial": [0, 2, 8], "schema": [0, 5, 6, 8], "get_entity_schema": [0, 2], "key_factori": [0, 8], "keyfactori": [0, 3], "get_pattern": [0, 3], "cluster": [0, 8], "clusterkeyfactori": [0, 3], "non_clust": [0, 8], "nonclusterkeyfactori": [0, 3], "deseri": [0, 4], "dataclass": [0, 6, 8], "dataclassseri": [0, 4], "wrap": [0, 8], "data_fram": [0, 8], "dataframewrap": [0, 5, 6], "get_datafram": [0, 5, 6], "set_datafram": [0, 5, 6], "entitywrap": [0, 5, 7], "entity_type_nam": [0, 5], "dataframemissingkeycolumn": [0, 5], "class": [1, 2, 3, 4, 5, 6], "arg": [1, 2, 3, 5], "kwarg": [1, 2, 3, 5], "protocol": [1, 3], "an": [1, 3, 5, 7], "interfac": [1, 3, 5, 6], "us": [1, 3, 5, 7], "snack": [1, 5, 8], "access": [1, 5, 6], "db": [1, 5], "If": 1, "you": 1, "want": 1, "creat": [1, 3, 5, 7], "custom": 1, "your": 1, "choos": 1, "new": [1, 3, 7], "follow": [1, 5, 6], "thi": [1, 6], "ani": [1, 2, 5], "str": [1, 2, 3, 5], "bool": [1, 2, 4, 5], "valu": [1, 3, 5], "provid": [1, 5, 6], "paramet": [1, 3, 5], "uniqu": 1, "data": [1, 2, 4, 5], "identifi": 1, "return": [1, 2, 3, 5, 6], "true": [1, 2, 5], "were": [1, 5], "list": [1, 2, 4, 5, 6], "byte": [1, 4, 5], "none": [1, 4, 5], "read": [1, 5], "from": [1, 5, 6], "wa": [1, 6], "miss": 1, "retriev": [1, 5, 6], "dict": [1, 2], "multipl": [1, 5], "certain": 1, "dictionari": 1, "assign": 1, "each": [1, 5, 6], "pattern": [1, 3], "given": [1, 5, 6], "select": [1, 5, 6], "onli": [1, 2, 6], "subset": 1, "expir": [1, 5], "int": [1, 5, 6], "0": [1, 5, 6], "save": [1, 5, 7], "number": [1, 5], "second": [1, 5], "until": [1, 5], "item": [1, 5], "i": [1, 2, 5, 6], "zero": [1, 5], "expiri": [1, 5], "contain": [1, 5], "correspond": [1, 5], "successfulli": 1, "client": [1, 6], "abc": [2, 4, 5], "object": [2, 5, 6], "excluded_field": 2, "classmethod": 2, "all": [2, 5, 6], "field": [2, 5, 6], "exclud": 2, "name": [2, 3, 5], "dct": 2, "abcmeta": 2, "type": [2, 3, 4, 5, 6], "exclude_field": 2, "fals": [2, 4], "e": 2, "map": [2, 6], "allow": [2, 6], "param": 2, "definit": 2, "factori": 3, "type_nam": 3, "key_valu": [3, 5], "string": 3, "specifi": [3, 6], "format": 3, "match": 3, "abstract": 4, "mani": 4, "ar": [5, 6], "simplifi": 5, "one": [5, 6], "keys_valu": 5, "avail": 5, "gener": 5, "df": [5, 6], "datafram": [5, 6], "frame": [5, 7], "input": [5, 6], "should": 5, "column": [5, 6], "full": 5, "sourc": 5, "need": [5, 6], "defin": 5, "row": 5, "singl": 5, "tabular": 5, "form": 5, "properti": 5, "In": 6, "section": 6, "we": 6, "go": 6, "through": 6, "few": 6, "how": 6, "can": 6, "databas": 6, "basic": 6, "explain": 6, "The": 6, "first": 6, "thing": 6, "do": 6, "common": 6, "structur": 6, "store": 6, "thei": 6, "valid": 6, "whenev": 6, "try": 6, "recommend": 6, "ad": 6, "addit": 6, "layer": 6, "For": 6, "pydant": 6, "decor": 6, "import": 6, "text": 6, "data_snack": [6, 7], "car": 6, "index": [6, 7], "price": 6, "brand": 6, "backend": 6, "our": 6, "But": 6, "could": 6, "easili": 6, "adjust": 6, "long": 6, "redis_connect": 6, "host": 6, "127": 6, "port": 6, "6379": 6, "password": 6, "To": 6, "start": 6, "previou": 6, "step": 6, "Then": 6, "regist": 6, "while": 6, "also": 6, "which": 6, "register_ent": 6, "now": 6, "notic": 6, "sinc": 6, "when": 6, "audi": 6, "17000": 6, "mset": 6, "mget": 6, "optim": 6, "wai": 6, "handl": 6, "so": 6, "alwai": 6, "faster": 6, "than": 6, "manual": 6, "standard": 6, "opel": 6, "4000": 6, "7000": 6, "toyota": 6, "14000": 6, "easier": 6, "work": 6, "without": 6, "entitytyp": 6, "command": 6, "car_wrap": 6, "create_wrap": 6, "make": 6, "panda": 6, "pd": 6, "python": 6, "v": 6, "to_dict": 6, "orient": 6, "record": 6, "Or": 6, "predefin": 6, "helper": 6, "df_wrap": 6, "db_wrap": 6, "requir": 6, "As": 6, "result": 6, "It": 6, "extend": 6, "instead": 6, "exampl": 7, "1": 7, "2": 7, "3": 7, "util": 7, "function": 7, "packag": [7, 8], "modul": [7, 8], "search": 7, "page": 7, "subpackag": 8, "submodul": 8, "content": 8, "except": 8}, "objects": {"data_snack": [[1, 0, 0, "-", "connections"], [2, 0, 0, "-", "entities"], [3, 0, 0, "-", "key_factories"], [4, 0, 0, "-", "serializers"], [5, 0, 0, "-", "wrap"]], "data_snack.connections": [[1, 0, 0, "-", "base"], [1, 0, 0, "-", "memcached"], [1, 0, 0, "-", "redis"]], "data_snack.connections.base": [[1, 1, 1, "", "Connection"]], "data_snack.connections.base.Connection": [[1, 2, 1, "", "connection"], [1, 3, 1, "", "delete"], [1, 3, 1, "", "delete_many"], [1, 3, 1, "", "get"], [1, 3, 1, "", "get_many"], [1, 3, 1, "", "keys"], [1, 3, 1, "", "set"], [1, 3, 1, "", "set_many"]], "data_snack.connections.memcached": [[1, 1, 1, "", "MemcachedConnection"]], "data_snack.connections.memcached.MemcachedConnection": [[1, 2, 1, "", "connection"], [1, 3, 1, "", "delete"], [1, 3, 1, "", "delete_many"], [1, 3, 1, "", "get"], [1, 3, 1, "", "get_many"], [1, 3, 1, "", "keys"], [1, 3, 1, "", "set"], [1, 3, 1, "", "set_many"]], "data_snack.connections.redis": [[1, 1, 1, "", "RedisConnection"]], "data_snack.connections.redis.RedisConnection": [[1, 2, 1, "", "connection"], [1, 3, 1, "", "delete"], [1, 3, 1, "", "delete_many"], [1, 3, 1, "", "get"], [1, 3, 1, "", "get_many"], [1, 3, 1, "", "keys"], [1, 3, 1, "", "set"], [1, 3, 1, "", "set_many"]], "data_snack.entities": [[2, 0, 0, "-", "entity"], [2, 0, 0, "-", "entity_meta"], [2, 0, 0, "-", "exceptions"], [2, 0, 0, "-", "registry"], [2, 0, 0, "-", "schema"]], "data_snack.entities.entity": [[2, 1, 1, "", "Entity"]], "data_snack.entities.entity.Entity": [[2, 1, 1, "", "Meta"], [2, 3, 1, "", "get_all_fields"], [2, 3, 1, "", "get_excluded_fields"], [2, 3, 1, "", "get_fields"], [2, 3, 1, "", "get_keys"]], "data_snack.entities.entity.Entity.Meta": [[2, 2, 1, "", "excluded_fields"], [2, 2, 1, "", "keys"]], "data_snack.entities.entity_meta": [[2, 1, 1, "", "EntityMetaClass"]], "data_snack.entities.entity_meta.EntityMetaClass": [[2, 2, 1, "", "meta_fields"]], "data_snack.entities.exceptions": [[2, 4, 1, "", "MetaEmptyKeysException"], [2, 4, 1, "", "MetaFieldsException"], [2, 4, 1, "", "NonExistingMetaError"]], "data_snack.entities.registry": [[2, 1, 1, "", "EntityRegistry"]], "data_snack.entities.registry.EntityRegistry": [[2, 2, 1, "", "entity_type"], [2, 2, 1, "", "serializer"]], "data_snack.entities.schema": [[2, 5, 1, "", "get_entity_schema"]], "data_snack.key_factories": [[3, 0, 0, "-", "base"], [3, 0, 0, "-", "cluster"], [3, 0, 0, "-", "non_cluster"]], "data_snack.key_factories.base": [[3, 1, 1, "", "KeyFactory"]], "data_snack.key_factories.base.KeyFactory": [[3, 3, 1, "", "get_key"], [3, 3, 1, "", "get_pattern"]], "data_snack.key_factories.cluster": [[3, 1, 1, "", "ClusterKeyFactory"]], "data_snack.key_factories.cluster.ClusterKeyFactory": [[3, 3, 1, "", "get_key"], [3, 3, 1, "", "get_pattern"]], "data_snack.key_factories.non_cluster": [[3, 1, 1, "", "NonClusterKeyFactory"]], "data_snack.key_factories.non_cluster.NonClusterKeyFactory": [[3, 3, 1, "", "get_key"], [3, 3, 1, "", "get_pattern"]], "data_snack.serializers": [[4, 0, 0, "-", "base"], [4, 0, 0, "-", "dataclass"]], "data_snack.serializers.base": [[4, 1, 1, "", "Serializer"]], "data_snack.serializers.base.Serializer": [[4, 3, 1, "", "deserialize"], [4, 2, 1, "", "entity_type"], [4, 3, 1, "", "serialize"]], "data_snack.serializers.dataclass": [[4, 1, 1, "", "DataclassSerializer"]], "data_snack.serializers.dataclass.DataclassSerializer": [[4, 3, 1, "", "deserialize"], [4, 2, 1, "", "entity_type"], [4, 3, 1, "", "serialize"]], "data_snack.wrap": [[5, 0, 0, "-", "base"], [5, 0, 0, "-", "data_frame"], [5, 0, 0, "-", "entity"], [5, 0, 0, "-", "exceptions"]], "data_snack.wrap.base": [[5, 1, 1, "", "Wrap"]], "data_snack.wrap.base.Wrap": [[5, 3, 1, "", "delete"], [5, 3, 1, "", "delete_many"], [5, 3, 1, "", "get"], [5, 3, 1, "", "get_many"], [5, 3, 1, "", "keys"], [5, 3, 1, "", "set"], [5, 3, 1, "", "set_many"]], "data_snack.wrap.data_frame": [[5, 1, 1, "", "DataFrameWrap"]], "data_snack.wrap.data_frame.DataFrameWrap": [[5, 2, 1, "", "entity_type"], [5, 3, 1, "", "get_dataframe"], [5, 3, 1, "", "set_dataframe"], [5, 2, 1, "", "snack"]], "data_snack.wrap.entity": [[5, 1, 1, "", "EntityWrap"]], "data_snack.wrap.entity.EntityWrap": [[5, 3, 1, "", "delete"], [5, 3, 1, "", "delete_many"], [5, 2, 1, "", "entity_type"], [5, 6, 1, "", "entity_type_name"], [5, 3, 1, "", "get"], [5, 3, 1, "", "get_many"], [5, 3, 1, "", "keys"], [5, 3, 1, "", "set"], [5, 3, 1, "", "set_many"], [5, 2, 1, "", "snack"]], "data_snack.wrap.exceptions": [[5, 4, 1, "", "DataFrameMissingKeyColumn"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"data_snack": [0, 1, 2, 3, 4, 5, 8], "packag": [0, 1, 2, 3, 4, 5], "subpackag": 0, "submodul": [0, 1, 2, 3, 4, 5], "except": [0, 2, 5], "modul": [0, 1, 2, 3, 4, 5], "snack": [0, 6, 7], "content": [0, 1, 2, 3, 4, 5, 7], "connect": [1, 6], "base": [1, 3, 4, 5], "memcach": 1, "redi": [1, 6], "entiti": [2, 5, 6], "entity_meta": 2, "registri": 2, "schema": 2, "key_factori": 3, "cluster": 3, "non_clust": 3, "serial": 4, "dataclass": 4, "wrap": 5, "data_fram": 5, "exampl": 6, "1": 6, "creat": 6, "new": 6, "save": 6, "defin": 6, "2": 6, "3": 6, "instanc": 6, "4": 6, "load": 6, "singl": 6, "5": 6, "multipl": 6, "us": 6, "an": 6, "entitywrap": 6, "data": [6, 7], "frame": 6, "util": 6, "function": 6, "your": 6, "dataset": 6, "you": 6, "welcom": 7, "": 7, "document": 7, "indic": 7, "tabl": 7}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"data_snack package": [[0, "data-snack-package"]], "Subpackages": [[0, "subpackages"]], "Submodules": [[0, "submodules"], [1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"]], "data_snack.exceptions module": [[0, "data-snack-exceptions-module"]], "data_snack.snack module": [[0, "data-snack-snack-module"]], "Module contents": [[0, "module-contents"], [1, "module-data_snack.connections"], [2, "module-data_snack.entities"], [3, "module-data_snack.key_factories"], [4, "module-data_snack.serializers"], [5, "module-data_snack.wrap"]], "data_snack.connections package": [[1, "data-snack-connections-package"]], "data_snack.connections.base module": [[1, "module-data_snack.connections.base"]], "data_snack.connections.memcached module": [[1, "module-data_snack.connections.memcached"]], "data_snack.connections.redis module": [[1, "module-data_snack.connections.redis"]], "data_snack.entities package": [[2, "data-snack-entities-package"]], "data_snack.entities.entity module": [[2, "module-data_snack.entities.entity"]], "data_snack.entities.entity_meta module": [[2, "module-data_snack.entities.entity_meta"]], "data_snack.entities.exceptions module": [[2, "module-data_snack.entities.exceptions"]], "data_snack.entities.registry module": [[2, "module-data_snack.entities.registry"]], "data_snack.entities.schema module": [[2, "module-data_snack.entities.schema"]], "data_snack.key_factories package": [[3, "data-snack-key-factories-package"]], "data_snack.key_factories.base module": [[3, "module-data_snack.key_factories.base"]], "data_snack.key_factories.cluster module": [[3, "module-data_snack.key_factories.cluster"]], "data_snack.key_factories.non_cluster module": [[3, "module-data_snack.key_factories.non_cluster"]], "data_snack.serializers package": [[4, "data-snack-serializers-package"]], "data_snack.serializers.base module": [[4, "module-data_snack.serializers.base"]], "data_snack.serializers.dataclass module": [[4, "module-data_snack.serializers.dataclass"]], "data_snack.wrap package": [[5, "data-snack-wrap-package"]], "data_snack.wrap.base module": [[5, "module-data_snack.wrap.base"]], "data_snack.wrap.data_frame module": [[5, "module-data_snack.wrap.data_frame"]], "data_snack.wrap.entity module": [[5, "module-data_snack.wrap.entity"]], "data_snack.wrap.exceptions module": [[5, "module-data_snack.wrap.exceptions"]], "Examples": [[6, "examples"]], "Example 1 - Creating new entities and saving": [[6, "example-1-creating-new-entities-and-saving"]], "1. Define entities": [[6, "define-entities"]], "2. Connect to redis": [[6, "connect-to-redis"]], "3. Create snack instance": [[6, "create-snack-instance"]], "4. Save and load single entity": [[6, "save-and-load-single-entity"]], "5. Save and load multiple entities": [[6, "save-and-load-multiple-entities"]], "Example 2 - Using an EntityWrap": [[6, "example-2-using-an-entitywrap"]], "Example 3 - Using data frame utils functions": [[6, "example-3-using-data-frame-utils-functions"]], "1. Define your dataset": [[6, "define-your-dataset"]], "2. Save and load you data frame": [[6, "save-and-load-you-data-frame"]], "Welcome to Data Snack\u2019s documentation!": [[7, "welcome-to-data-snack-s-documentation"]], "Contents:": [[7, null]], "Indices and tables": [[7, "indices-and-tables"]], "data_snack": [[8, "data-snack"]]}, "indexentries": {"connection (class in data_snack.connections.base)": [[1, "data_snack.connections.base.Connection"]], "memcachedconnection (class in data_snack.connections.memcached)": [[1, "data_snack.connections.memcached.MemcachedConnection"]], "redisconnection (class in data_snack.connections.redis)": [[1, "data_snack.connections.redis.RedisConnection"]], "connection (data_snack.connections.base.connection attribute)": [[1, "data_snack.connections.base.Connection.connection"]], "connection (data_snack.connections.memcached.memcachedconnection attribute)": [[1, "data_snack.connections.memcached.MemcachedConnection.connection"]], "connection (data_snack.connections.redis.redisconnection attribute)": [[1, "data_snack.connections.redis.RedisConnection.connection"]], "data_snack.connections": [[1, "module-data_snack.connections"]], "data_snack.connections.base": [[1, "module-data_snack.connections.base"]], "data_snack.connections.memcached": [[1, "module-data_snack.connections.memcached"]], "data_snack.connections.redis": [[1, "module-data_snack.connections.redis"]], "delete() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.delete"]], "delete() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.delete"]], "delete() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.delete"]], "delete_many() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.delete_many"]], "delete_many() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.delete_many"]], "delete_many() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.delete_many"]], "get() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.get"]], "get() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.get"]], "get() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.get"]], "get_many() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.get_many"]], "get_many() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.get_many"]], "get_many() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.get_many"]], "keys() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.keys"]], "keys() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.keys"]], "keys() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.keys"]], "module": [[1, "module-data_snack.connections"], [1, "module-data_snack.connections.base"], [1, "module-data_snack.connections.memcached"], [1, "module-data_snack.connections.redis"], [2, "module-data_snack.entities"], [2, "module-data_snack.entities.entity"], [2, "module-data_snack.entities.entity_meta"], [2, "module-data_snack.entities.exceptions"], [2, "module-data_snack.entities.registry"], [2, "module-data_snack.entities.schema"], [3, "module-data_snack.key_factories"], [3, "module-data_snack.key_factories.base"], [3, "module-data_snack.key_factories.cluster"], [3, "module-data_snack.key_factories.non_cluster"], [4, "module-data_snack.serializers"], [4, "module-data_snack.serializers.base"], [4, "module-data_snack.serializers.dataclass"], [5, "module-data_snack.wrap"], [5, "module-data_snack.wrap.base"], [5, "module-data_snack.wrap.data_frame"], [5, "module-data_snack.wrap.entity"], [5, "module-data_snack.wrap.exceptions"]], "set() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.set"]], "set() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.set"]], "set() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.set"]], "set_many() (data_snack.connections.base.connection method)": [[1, "data_snack.connections.base.Connection.set_many"]], "set_many() (data_snack.connections.memcached.memcachedconnection method)": [[1, "data_snack.connections.memcached.MemcachedConnection.set_many"]], "set_many() (data_snack.connections.redis.redisconnection method)": [[1, "data_snack.connections.redis.RedisConnection.set_many"]], "entity (class in data_snack.entities.entity)": [[2, "data_snack.entities.entity.Entity"]], "entity.meta (class in data_snack.entities.entity)": [[2, "data_snack.entities.entity.Entity.Meta"]], "entitymetaclass (class in data_snack.entities.entity_meta)": [[2, "data_snack.entities.entity_meta.EntityMetaClass"]], "entityregistry (class in data_snack.entities.registry)": [[2, "data_snack.entities.registry.EntityRegistry"]], "metaemptykeysexception": [[2, "data_snack.entities.exceptions.MetaEmptyKeysException"]], "metafieldsexception": [[2, "data_snack.entities.exceptions.MetaFieldsException"]], "nonexistingmetaerror": [[2, "data_snack.entities.exceptions.NonExistingMetaError"]], "data_snack.entities": [[2, "module-data_snack.entities"]], "data_snack.entities.entity": [[2, "module-data_snack.entities.entity"]], "data_snack.entities.entity_meta": [[2, "module-data_snack.entities.entity_meta"]], "data_snack.entities.exceptions": [[2, "module-data_snack.entities.exceptions"]], "data_snack.entities.registry": [[2, "module-data_snack.entities.registry"]], "data_snack.entities.schema": [[2, "module-data_snack.entities.schema"]], "entity_type (data_snack.entities.registry.entityregistry attribute)": [[2, "data_snack.entities.registry.EntityRegistry.entity_type"]], "excluded_fields (data_snack.entities.entity.entity.meta attribute)": [[2, "data_snack.entities.entity.Entity.Meta.excluded_fields"]], "get_all_fields() (data_snack.entities.entity.entity class method)": [[2, "data_snack.entities.entity.Entity.get_all_fields"]], "get_entity_schema() (in module data_snack.entities.schema)": [[2, "data_snack.entities.schema.get_entity_schema"]], "get_excluded_fields() (data_snack.entities.entity.entity class method)": [[2, "data_snack.entities.entity.Entity.get_excluded_fields"]], "get_fields() (data_snack.entities.entity.entity class method)": [[2, "data_snack.entities.entity.Entity.get_fields"]], "get_keys() (data_snack.entities.entity.entity class method)": [[2, "data_snack.entities.entity.Entity.get_keys"]], "keys (data_snack.entities.entity.entity.meta attribute)": [[2, "data_snack.entities.entity.Entity.Meta.keys"]], "meta_fields (data_snack.entities.entity_meta.entitymetaclass attribute)": [[2, "data_snack.entities.entity_meta.EntityMetaClass.meta_fields"]], "serializer (data_snack.entities.registry.entityregistry attribute)": [[2, "data_snack.entities.registry.EntityRegistry.serializer"]], "clusterkeyfactory (class in data_snack.key_factories.cluster)": [[3, "data_snack.key_factories.cluster.ClusterKeyFactory"]], "keyfactory (class in data_snack.key_factories.base)": [[3, "data_snack.key_factories.base.KeyFactory"]], "nonclusterkeyfactory (class in data_snack.key_factories.non_cluster)": [[3, "data_snack.key_factories.non_cluster.NonClusterKeyFactory"]], "data_snack.key_factories": [[3, "module-data_snack.key_factories"]], "data_snack.key_factories.base": [[3, "module-data_snack.key_factories.base"]], "data_snack.key_factories.cluster": [[3, "module-data_snack.key_factories.cluster"]], "data_snack.key_factories.non_cluster": [[3, "module-data_snack.key_factories.non_cluster"]], "get_key() (data_snack.key_factories.base.keyfactory method)": [[3, "data_snack.key_factories.base.KeyFactory.get_key"]], "get_key() (data_snack.key_factories.cluster.clusterkeyfactory method)": [[3, "data_snack.key_factories.cluster.ClusterKeyFactory.get_key"]], "get_key() (data_snack.key_factories.non_cluster.nonclusterkeyfactory method)": [[3, "data_snack.key_factories.non_cluster.NonClusterKeyFactory.get_key"]], "get_pattern() (data_snack.key_factories.base.keyfactory method)": [[3, "data_snack.key_factories.base.KeyFactory.get_pattern"]], "get_pattern() (data_snack.key_factories.cluster.clusterkeyfactory method)": [[3, "data_snack.key_factories.cluster.ClusterKeyFactory.get_pattern"]], "get_pattern() (data_snack.key_factories.non_cluster.nonclusterkeyfactory method)": [[3, "data_snack.key_factories.non_cluster.NonClusterKeyFactory.get_pattern"]], "dataclassserializer (class in data_snack.serializers.dataclass)": [[4, "data_snack.serializers.dataclass.DataclassSerializer"]], "serializer (class in data_snack.serializers.base)": [[4, "data_snack.serializers.base.Serializer"]], "data_snack.serializers": [[4, "module-data_snack.serializers"]], "data_snack.serializers.base": [[4, "module-data_snack.serializers.base"]], "data_snack.serializers.dataclass": [[4, "module-data_snack.serializers.dataclass"]], "deserialize() (data_snack.serializers.base.serializer method)": [[4, "data_snack.serializers.base.Serializer.deserialize"]], "deserialize() (data_snack.serializers.dataclass.dataclassserializer method)": [[4, "data_snack.serializers.dataclass.DataclassSerializer.deserialize"]], "entity_type (data_snack.serializers.base.serializer attribute)": [[4, "data_snack.serializers.base.Serializer.entity_type"]], "entity_type (data_snack.serializers.dataclass.dataclassserializer attribute)": [[4, "data_snack.serializers.dataclass.DataclassSerializer.entity_type"]], "serialize() (data_snack.serializers.base.serializer method)": [[4, "data_snack.serializers.base.Serializer.serialize"]], "serialize() (data_snack.serializers.dataclass.dataclassserializer method)": [[4, "data_snack.serializers.dataclass.DataclassSerializer.serialize"]], "dataframemissingkeycolumn": [[5, "data_snack.wrap.exceptions.DataFrameMissingKeyColumn"]], "dataframewrap (class in data_snack.wrap.data_frame)": [[5, "data_snack.wrap.data_frame.DataFrameWrap"]], "entitywrap (class in data_snack.wrap.entity)": [[5, "data_snack.wrap.entity.EntityWrap"]], "wrap (class in data_snack.wrap.base)": [[5, "data_snack.wrap.base.Wrap"]], "data_snack.wrap": [[5, "module-data_snack.wrap"]], "data_snack.wrap.base": [[5, "module-data_snack.wrap.base"]], "data_snack.wrap.data_frame": [[5, "module-data_snack.wrap.data_frame"]], "data_snack.wrap.entity": [[5, "module-data_snack.wrap.entity"]], "data_snack.wrap.exceptions": [[5, "module-data_snack.wrap.exceptions"]], "delete() (data_snack.wrap.base.wrap method)": [[5, "data_snack.wrap.base.Wrap.delete"]], "delete() (data_snack.wrap.entity.entitywrap method)": [[5, "data_snack.wrap.entity.EntityWrap.delete"]], "delete_many() (data_snack.wrap.base.wrap method)": [[5, "data_snack.wrap.base.Wrap.delete_many"]], "delete_many() (data_snack.wrap.entity.entitywrap method)": [[5, "data_snack.wrap.entity.EntityWrap.delete_many"]], "entity_type (data_snack.wrap.data_frame.dataframewrap attribute)": [[5, "data_snack.wrap.data_frame.DataFrameWrap.entity_type"]], "entity_type (data_snack.wrap.entity.entitywrap attribute)": [[5, "data_snack.wrap.entity.EntityWrap.entity_type"]], "entity_type_name (data_snack.wrap.entity.entitywrap property)": [[5, "data_snack.wrap.entity.EntityWrap.entity_type_name"]], "get() (data_snack.wrap.base.wrap method)": [[5, "data_snack.wrap.base.Wrap.get"]], "get() (data_snack.wrap.entity.entitywrap method)": [[5, "data_snack.wrap.entity.EntityWrap.get"]], "get_dataframe() (data_snack.wrap.data_frame.dataframewrap method)": [[5, "data_snack.wrap.data_frame.DataFrameWrap.get_dataframe"]], "get_many() (data_snack.wrap.base.wrap method)": [[5, "data_snack.wrap.base.Wrap.get_many"]], "get_many() (data_snack.wrap.entity.entitywrap method)": [[5, "data_snack.wrap.entity.EntityWrap.get_many"]], "keys() (data_snack.wrap.base.wrap method)": [[5, "data_snack.wrap.base.Wrap.keys"]], "keys() (data_snack.wrap.entity.entitywrap method)": [[5, "data_snack.wrap.entity.EntityWrap.keys"]], "set() (data_snack.wrap.base.wrap method)": [[5, "data_snack.wrap.base.Wrap.set"]], "set() (data_snack.wrap.entity.entitywrap method)": [[5, "data_snack.wrap.entity.EntityWrap.set"]], "set_dataframe() (data_snack.wrap.data_frame.dataframewrap method)": [[5, "data_snack.wrap.data_frame.DataFrameWrap.set_dataframe"]], "set_many() (data_snack.wrap.base.wrap method)": [[5, "data_snack.wrap.base.Wrap.set_many"]], "set_many() (data_snack.wrap.entity.entitywrap method)": [[5, "data_snack.wrap.entity.EntityWrap.set_many"]], "snack (data_snack.wrap.data_frame.dataframewrap attribute)": [[5, "data_snack.wrap.data_frame.DataFrameWrap.snack"]], "snack (data_snack.wrap.entity.entitywrap attribute)": [[5, "data_snack.wrap.entity.EntityWrap.snack"]]}})